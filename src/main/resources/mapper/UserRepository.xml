<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//maybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.katok09.realestate.management.repository.UserRepository">

  <resultMap id="UserResultMap" type="com.katok09.realestate.management.data.User">
    <id property="id" column="id"/>
    <result property="username" column="username"/>
    <result property="password" column="password"/>
    <result property="email" column="email"/>
    <result property="displayName" column="display_name"/>
    <result property="role" column="role"/>
    <result property="enabled" column="enabled"/>
    <result property="createdAt" column="created_at"/>
    <result property="updatedAt" column="updated_at"/>
    <result property="lastLoginAt" column="last_login_at"/>
    <result property="passwordChangedAt" column="password_changed_at"/>
    <result property="isDeleted" column="is_deleted"/>
  </resultMap>

  <select id="findByUsername" resultMap="UserResultMap">
    SELECT id,
           username,
           password,
           email,
           display_name,
           role,
           enabled,
           created_at,
           updated_at,
           last_login_at,
           password_changed_at,
           is_deleted
    FROM users
    WHERE username = #{username}
      AND is_deleted = false
  </select>

  <select id="findByEmail" resultMap="UserResultMap">
    SELECT id,
           username,
           password,
           email,
           display_name,
           role,
           enabled,
           created_at,
           updated_at,
           last_login_at,
           password_changed_at,
           is_deleted
    FROM users
    WHERE email = #{email}
      AND is_deleted = false
  </select>

  <select id="findById" resultMap="UserResultMap">
    SELECT id,
           username,
           password,
           email,
           display_name,
           role,
           enabled,
           created_at,
           updated_at,
           last_login_at,
           password_changed_at,
           is_deleted
    FROM users
    WHERE id = #{id}
      AND is_deleted = false
  </select>

  <select id="existsByUsername" resultType="boolean">
    SELECT COUNT(*) > 0
    FROM users
    WHERE username = #{username}
      AND is_deleted = false
  </select>

  <select id="existsByEmail" resultType="boolean">
    SELECT COUNT(*) > 0
    FROM users
    WHERE email = #{email}
      AND is_deleted = false
  </select>

  <insert id="save" parameterType="com.katok09.realestate.management.data.User"
    useGeneratedKeys="true" keyProperty="user.id">
    INSERT INTO users(username, password, email, display_name, role, enabled,
                      created_at, updated_at, last_login_at, password_changed_at, is_deleted)
    VALUES (#{user.username}, #{user.password}, #{user.email}, #{user.displayName},
            #{user.role}, #{user.enabled}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, NULL, NULL,
            #{user.isDeleted})
  </insert>

  <update id="update" parameterType="com.katok09.realestate.management.data.User">
    UPDATE users
    SET username     = #{user.username},
        email        = #{user.email},
        display_name = #{user.displayName},
        role         = #{user.role},
        enabled      = #{user.enabled},
        updated_at   = CURRENT_TIMESTAMP
    WHERE id = #{user.id}
      AND is_deleted = false
  </update>

  <update id="deleteById">
    UPDATE users
    SET is_deleted = true,
        updated_at = CURRENT_TIMESTAMP
    WHERE id = #{id}
  </update>

  <select id="findAll" resultMap="UserResultMap">
    SELECT id,
           username,
           password,
           email,
           display_name,
           role,
           enabled,
           crated_at,
           updated_at,
           last_login_at,
           password_changed_at,
           is_deleted
             FROU users WHERE is_deleted = false
    OREDER BY created_at DESC
  </select>

  <select id="findAllActive" resultMap="UserResultMap">
    SELECT id,
           username,
           password,
           email,
           display_name,
           role,
           enabled,
           created_at,
           updated_at,
           last_login_at,
           password_changed_at,
           is_deleted
    FROM users
    WHERE enabled = true
      AND is_deleted = false
    ORDER BY username ASC
  </select>

  <select id="findUsersCreatedAfter" resultMap="UserResultMap">
    SELECT id,
           username,
           password,
           email,
           display_name,
           role,
           enabled,
           created_at,
           updated_at,
           last_login_at,
           password_changed_at,
           is_deleted
    FROM users
    WHERE created_at >= #{since}
      AND is_deleted = false
    ORDER BY created_at DESC
  </select>

  <select id="findUsersUpdatedAfter" resultMap="UserResultMap">
    SELECT id,
           username,
           password,
           email,
           display_name,
           role,
           enabled,
           created_at,
           updated_at,
           last_login_at,
           password_changed_at,
           is_deleted
    FROM users
    WHERE updated_at >= #{since}
      AND is_deleted = false
    ORDER BY updated_at DESC
  </select>

  <select id="countByRole" resultType="int">
    SELECT COUNT(*)
    FROM users
    WHERE role = #{role}
      AND enabled = true
      AND is_deleted = false
  </select>

  <update id="changeUserInfo">
    UPDATE users
    SET username = #{username},
    email = #{email},
    display_name = #{displayName},
    updated_at = CURRENT_TIMESTAMP
    <if test="password != #{password}">
      password = #{password},
      password_changed_at = CURRENT_TIMESTAMP,
    </if>
    WHERE id = #{id}
    AND is_deleted = false

  </update>

  <update id="updateLastLoginAt">
    UPDATE users
    SET last_login_at = #{lastLoginAt},
        updated_at    = CURRENT_TIMESTAMP
    WHERE id = #{id}
      AND is_deleted = false
  </update>

  <update id="updatePassword">
    UPDATE users
    SET password            = #{newPassword},
        password_changed_at = CURRENT_TIMESTAMP,
        updated_at          = CURRENT_TIMESTAMP
    WHERE id = #{id}
      AND is_deleted = false
  </update>

  <update id="updateEnabled">
    UPDATE users
    SET enabled    = #{enabled},
        updated_at = CURRENT_TIMESTAMP
    WHERE id = #{id}
      AND is_deleted = false
  </update>

</mapper>