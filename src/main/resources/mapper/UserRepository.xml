<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//maybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.katok09.realestate.management.repository.UserRepository">

  <resultMap id="UserResultMap" type="com.katok09.realestate.management.data.User">
    <id property="id" column="id"/>
    <result property="username" column="username"/>
    <result property="password" column="password"/>
    <result property="email" column="email"/>
    <result property="displayName" column="display_name"/>
    <result property="role" column="role"/>
    <result property="enabled" column="enabled"/>
    <result property="createdAt" column="created_at"/>
    <result property="updatedAt" column="updated_at"/>
    <result property="lastLoginAt" column="last_login_at"/>
    <result property="passwordChangedAt" column="password_changed_at"/>
    <result property="loginFailedAttempts" column="login_failed_attempts"/>
    <result property="accountLockedUntil" column="account_locked_until"/>
    <result property="isDeleted" column="is_deleted"/>
  </resultMap>

  <select id="findByUsername" resultMap="UserResultMap">
    SELECT id,
    username,
    password,
    email,
    display_name,
    role,
    enabled,
    created_at,
    updated_at,
    last_login_at,
    password_changed_at,
    login_failed_attempts,
    account_locked_until,
    is_deleted
    FROM users
    WHERE username = #{username}
    AND is_deleted = false
  </select>

  <select id="findById" resultMap="UserResultMap">
    SELECT id,
    username,
    password,
    email,
    display_name,
    role,
    enabled,
    created_at,
    updated_at,
    last_login_at,
    password_changed_at,
    login_failed_attempts,
    account_locked_until,
    is_deleted
    FROM users
    WHERE id = #{id}
    AND is_deleted = false
  </select>

  <select id="existsByUserId" resultType="boolean">
    SELECT COUNT(*) > 0
    FROM users
    WHERE id = #{id}
    AND is_deleted = false
  </select>

  <select id="existsByUsername" resultType="boolean">
    SELECT COUNT(*) > 0
    FROM users
    WHERE username = #{username}
    AND is_deleted = false
  </select>

  <select id="existsByEmail" resultType="boolean">
    SELECT COUNT(*) > 0
    FROM users
    WHERE email = #{email}
    AND is_deleted = false
  </select>

  <select id="existsByUsernameNotSelfId" resultType="boolean">
    SELECT COUNT(*) > 0
    FROM users
    WHERE username = #{username}
    AND id != #{id}
    AND is_deleted = false
  </select>

  <select id="existsByEmailNotSelfId" resultType="boolean">
    SELECT COUNT(*) > 0
    FROM users
    WHERE email = #{email}
    AND id != #{id}
    AND is_deleted = false
  </select>

  <select id="findAll" resultMap="UserResultMap">
    SELECT id,
    username,
    password,
    email,
    display_name,
    role,
    enabled,
    created_at,
    updated_at,
    last_login_at,
    password_changed_at,
    login_failed_attempts,
    account_locked_until,
    is_deleted
    FROM users
    WHERE is_deleted = false
    ORDER BY created_at DESC
  </select>

  <insert id="registerUser" parameterType="com.katok09.realestate.management.data.User"
    useGeneratedKeys="true" keyProperty="user.id">
    INSERT INTO users(username, password, email, display_name, role, enabled,
    created_at, updated_at, last_login_at, password_changed_at,
    login_failed_attempts,
    account_locked_until, is_deleted)
    VALUES (#{user.username}, #{user.password}, #{user.email}, #{user.displayName},
    #{user.role}, #{user.enabled}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, NULL, NULL, 0,
    NULL, #{user.isDeleted})
  </insert>

  <update id="updateUser">
    UPDATE users
    SET username = #{updateRequest.username},
    email = #{updateRequest.email},
    display_name = #{updateRequest.displayName},
    updated_at = CURRENT_TIMESTAMP
    WHERE id = #{id}
    AND is_deleted = false
  </update>

  <update id="updatePassword">
    UPDATE users
    SET password = #{newPassword},
    password_changed_at = CURRENT_TIMESTAMP,
    updated_at = CURRENT_TIMESTAMP
    WHERE id = #{id}
    AND is_deleted = false
  </update>

  <update id="deleteUserById">
    UPDATE users
    SET is_deleted = true,
    updated_at = CURRENT_TIMESTAMP
    WHERE id = #{id}
  </update>

  <update id="updateLoginFailed">
    UPDATE users
    SET login_failed_attempts = #{loginFailedAttempts},
    account_locked_until = #{accountLockedUntil},
    updated_at = CURRENT_TIMESTAMP
    WHERE id = #{id}
    AND is_deleted = false
  </update>

  <update id="updateLastLoginAt">
    UPDATE users
    SET last_login_at = #{lastLoginAt},
    updated_at = CURRENT_TIMESTAMP
    WHERE id = #{id}
    AND is_deleted = false
  </update>

  <update id="updateStatus">
    UPDATE users
    SET role = #{statusRequest.role},
    enabled = #{statusRequest.enabled},
    login_failed_attempts = #{statusRequest.loginFailedAttempts},
    account_locked_until = #{statusRequest.accountLockedUntil},
    updated_at = CURRENT_TIMESTAMP
    WHERE id = #{id}
    AND is_deleted = false
  </update>

</mapper>